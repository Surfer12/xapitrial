{"openapi":"3.0.3","info":{"title":"xAI's REST API","description":"REST API for xAI compatible with other providers.","license":{"name":""},"version":"1.0.0"},"paths":{"/v1/api-key":{"get":{"tags":["crate::v1"],"summary":"Get information about an API key, including name, status, permissions and users who created or modified this key.","operationId":"handle_get_api_key_info_request","responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiKey"},"example":{"redacted_api_key":"xG1k...b14o","user_id":"59fbe5f2-040b-46d5-8325-868bb8f23eb2","name":"My API Key","create_time":"2024-01-01T12:55:18.139305Z","modify_time":"2024-08-28T17:20:12.343321Z","modified_by":"3d38b4dc-4eb7-4785-ae26-c3fa8997ffc7","team_id":"5ea6f6bd-7815-4b8a-9135-28b2d7ba6722","acls":["api-key:model:*","api-key:endpoint:*"],"api_key_id":"ae1e1841-4326-4b36-a8a9-8a1a7237db11","team_blocked":false,"api_key_blocked":false,"api_key_disabled":false}}}},"400":{"description":"Bad request. The request is invalid."}},"security":[{"bearerAuth":[]}]}},"/v1/chat/completions":{"post":{"tags":["crate::v1"],"summary":"Create a language model response for a given chat conversation. This endpoint is compatible with the OpenAI API.","operationId":"handle_generic_completion_request","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChatRequest"},"example":"{\n          \"messages\": [\n            {\n              \"role\": \"system\",\n              \"content\": \"You are a test assistant.\"\n            },\n            {\n              \"role\": \"user\",\n              \"content\": \"Testing. Just say hi and nothing else.\"\n            }\n          ],\n          \"model\": \"grok-2-mini\"\n        }"}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChatResponse"},"example":{"id":"c6f2d009-77ca-40d9-9de5-6d19716e1b4d","object":"chat.completion","created":1728646283,"model":"grok-2-mini","choices":[{"index":0,"message":{"role":"assistant","content":"Hi"},"finish_reason":"stop"}],"usage":{"prompt_tokens":25,"completion_tokens":2,"total_tokens":27,"prompt_tokens_details":{"text_tokens":17,"audio_tokens":0,"image_tokens":8,"cached_tokens":0}},"system_fingerprint":"fp_9877325691"}}}},"400":{"description":"Bad request. The request is invalid."}},"security":[{"bearerAuth":[]}]}},"/v1/complete":{"post":{"tags":["crate::v1"],"summary":"Complete endpoint. This endpoint is compatible with the Anthropic API.","operationId":"handle_generic_complete_request","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CompleteRequest"},"example":"{\n          \"model\": \"grok-2-mini\",\n          \"max_tokens_to_sample\": 8,\n          \"prompt\": \"\\n\\nHuman: Hello, how are you?\\n\\nAssistant:\"\n        }"}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CompleteResponse"},"example":{"type":"completion","id":"8d3e45c6-f882-4d40-bb4a-54c6af166e18","completion":"Hello there! I'm Grok","stop_reason":"max_tokens","model":"grok-2-mini"}}}},"400":{"description":"Bad request. The request is invalid."}},"security":[{"bearerAuth":[]}]}},"/v1/completions":{"post":{"tags":["crate::v1"],"summary":"Create a language model response for a given prompt. This endpoint is compatible with the OpenAI API.","operationId":"handle_sample_request","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SampleRequest"},"example":"{\n          \"prompt\": \"1, 2, 3, 4, \",\n          \"model\": \"grok-2-mini\",\n          \"max_tokens\": 3\n        }"}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SampleResponse"},"example":{"id":"3a34a6a3-82b2-46d9-874d-99dbca084813","object":"text_completion","created":1728652460,"model":"grok-beta","choices":[{"index":0,"text":"5, ","finish_reason":"length"}],"usage":{"prompt_tokens":12,"completion_tokens":3,"total_tokens":15},"system_fingerprint":"fp_8933231290"}}}},"400":{"description":"Bad request. The request is invalid."}},"security":[{"bearerAuth":[]}]}},"/v1/embedding-models":{"get":{"tags":["crate::v1"],"summary":"List all embedding models available for an API key.","operationId":"handle_embedding_models_list_request","responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListEmbeddingModelsResponse"},"example":{"models":[{"id":"v1","created":1725148800,"object":"model","owned_by":"xai","version":"0.1.0","input_modalities":["text"],"prompt_text_token_price":100,"prompt_image_token_price":0}]}}}},"400":{"description":"Bad request. The request is invalid."}},"security":[{"bearerAuth":[]}]}},"/v1/embedding-models/{model_id}":{"get":{"tags":["crate::v1"],"summary":"Embedding model retrieval with full information.","operationId":"handle_embedding_model_get_request","parameters":[{"name":"model_id","in":"path","description":"ID of the model to get.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmbeddingModel"},"example":{"id":"v1","created":1725148800,"object":"model","owned_by":"xai","version":"0.1.0","input_modalities":["text"],"prompt_text_token_price":100,"prompt_image_token_price":0}}}},"400":{"description":"Bad request. The request is invalid."},"404":{"description":"Model not found"}},"security":[{"bearerAuth":[]}]}},"/v1/embeddings":{"post":{"tags":["crate::v1"],"summary":"Create an embedding vector representation corresponding to the input text. This endpoint is compatible with the OpenAI API.","operationId":"handle_embedding_request","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmbeddingRequest"},"example":"{\n            \"input\": [\"This is an example content to embed...\"],\n            \"model\": \"v1\",\n            \"encoding_format\": \"float\"\n        }"}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmbeddingResponse"},"example":{"object":"list","model":"v1","data":[{"index":0,"embedding":[0.01567895,0.063257694,0.045925662],"object":"embedding"}]}}}},"400":{"description":"Bad request. The request is invalid."}},"security":[{"bearerAuth":[]}]}},"/v1/images/edits":{"post":{"tags":["crate::v1"],"summary":"Edit an image based on a prompt. This endpoint is compatible with the OpenAI API.","operationId":"handle_edit_image_request","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditImageRequest"},"example":"{\n            \"prompt\": \"Add a hat to this cat.\",\n            \"image\": {\n                \"url\": \"...\"\n            },\n            \"model\": \"aurora\"\n        }"}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GeneratedImageResponse"},"example":{"data":[{"base64":"..."}]}}}},"400":{"description":"Bad request. The request is invalid."}},"security":[{"bearerAuth":[]}]}},"/v1/images/generations":{"post":{"tags":["crate::v1"],"summary":"Generate an image based on a prompt. This endpoint is compatible with the OpenAI API.","operationId":"handle_generate_image_request","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenerateImageRequest"},"example":"{\n            \"prompt\": \"A cat in a tree\",\n            \"model\": \"aurora\"\n        }"}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GeneratedImageResponse"},"example":{"data":[{"base64":"..."}]}}}},"400":{"description":"Bad request. The request is invalid."}},"security":[{"bearerAuth":[]}]}},"/v1/language-models":{"get":{"tags":["crate::v1"],"summary":"List all language models available.","operationId":"handle_language_models_list_request","responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListLanguageModelsResponse"},"example":{"models":[{"id":"grok-beta","created":1726444800,"object":"model","owned_by":"xai","input_modalities":["text"],"output_modalities":["text"],"prompt_text_token_price":250000,"prompt_image_token_price":0,"completion_text_token_price":1000000}]}}}},"400":{"description":"Bad request. The request is invalid."}},"security":[{"bearerAuth":[]}]}},"/v1/language-models/{model_id}":{"get":{"tags":["crate::v1"],"summary":"Get information about an embedding model using its ID.","operationId":"handle_language_model_get_request","parameters":[{"name":"model_id","in":"path","description":"ID of the model to get.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LanguageModel"},"example":{"id":"grok-beta","created":1726444800,"object":"model","owned_by":"xai","version":"1.0.0","input_modalities":["text"],"output_modalities":["text"],"prompt_text_token_price":500000,"prompt_image_token_price":0,"completion_text_token_price":1500000}}}},"400":{"description":"Bad request. The request is invalid."},"404":{"description":"Model not found"}},"security":[{"bearerAuth":[]}]}},"/v1/messages":{"post":{"tags":["crate::v1"],"summary":"Messages endpoint. This endpoint is compatible with the Anthropic API.","operationId":"handle_generic_messages_request","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageRequest"},"example":"{\n          \"model\": \"grok-2-mini\",\n          \"max_tokens\": 32,\n          \"messages\": [\n            {\"role\": \"user\", \"content\": \"Hello, world\"}\n          ]\n        }"}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"},"example":{"id":"107baefc-993f-4632-b504-3f0c90d089aa","type":"message","role":"assistant","content":[{"type":"text","text":"Hello! How can I assist you today?"}],"model":"grok-2-mini","stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":9,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"output_tokens":10}}}}},"400":{"description":"Bad request. The request is invalid."}},"security":[{"bearerAuth":[]}]}},"/v1/models":{"get":{"tags":["crate::v1"],"summary":"OpenAI compatible version of model listing with reduced information. This endpoint is compatible with the OpenAI API.","operationId":"handle_models_list_request","responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListModelsResponse"},"example":{"data":[{"id":"grok-beta","created":1725148800,"object":"model","owned_by":"xai"}]}}}},"400":{"description":"Bad request. The request is invalid."}},"security":[{"bearerAuth":[]}]}},"/v1/models/{model_id}":{"get":{"tags":["crate::v1"],"summary":"List all language and embedding models available. This endpoint is compatible with the OpenAI API.","operationId":"handle_model_get_request","parameters":[{"name":"model_id","in":"path","description":"ID of the model to get.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model"},"example":{"id":"grok-beta","created":1726444800,"object":"model","owned_by":"xai"}}}},"400":{"description":"Bad request. The request is invalid."},"404":{"description":"Model not found"}},"security":[{"bearerAuth":[]}]}}},"components":{"schemas":{"ApiKey":{"type":"object","required":["redacted_api_key","user_id","name","create_time","modify_time","modified_by","team_id","acls","api_key_id","team_blocked","api_key_blocked","api_key_disabled"],"properties":{"acls":{"type":"array","items":{"type":"string"}},"api_key_blocked":{"type":"boolean"},"api_key_disabled":{"type":"boolean"},"api_key_id":{"type":"string"},"create_time":{"type":"string"},"modified_by":{"type":"string"},"modify_time":{"type":"string"},"name":{"type":"string"},"redacted_api_key":{"type":"string"},"team_blocked":{"type":"boolean"},"team_id":{"type":"string"},"user_id":{"type":"string"}}},"ChatRequest":{"type":"object","required":["model","messages"],"properties":{"frequency_penalty":{"type":"number","format":"float","description":"Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.","nullable":true},"logit_bias":{"type":"object","description":"A JSON object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.","additionalProperties":{"type":"number","format":"float"},"nullable":true},"logprobs":{"type":"boolean","description":"Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned in the content of message.","nullable":true},"max_tokens":{"type":"integer","format":"int32","description":"The maximum number of tokens that can be generated in the chat completion. This value can be used to control costs for text generated via API.","nullable":true},"messages":{"type":"array","items":{"$ref":"#/components/schemas/Message"},"description":"A list of messages that make up the the chat conversation. Different models support different message types, such as image and text."},"model":{"type":"string","description":"Model name for the model to use."},"n":{"type":"integer","format":"int32","description":"How many chat completion choices to generate for each input message. Note that you will be charged based on the number of generated tokens across all of the choices. Keep n as 1 to minimize costs.","nullable":true},"presence_penalty":{"type":"number","format":"float","description":"Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.","nullable":true},"response_format":{"allOf":[{"$ref":"#/components/schemas/ResponseFormat"}],"nullable":true},"seed":{"type":"integer","format":"int32","description":"If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same `seed` and parameters should return the same result. Determinism is not guaranteed, and you should refer to the `system_fingerprint` response parameter to monitor changes in the backend.","nullable":true},"stop":{"type":"array","items":{"type":"string"},"description":"Up to 4 sequences where the API will stop generating further tokens.","nullable":true},"stream":{"type":"boolean","description":"If set, partial message deltas will be sent. Tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a `data: [DONE]` message.","nullable":true},"stream_options":{"allOf":[{"$ref":"#/components/schemas/StreamOptions"}],"nullable":true},"temperature":{"type":"number","format":"float","description":"What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.","nullable":true},"tool_choice":{"allOf":[{"$ref":"#/components/schemas/ToolChoice"}],"nullable":true},"tools":{"type":"array","items":{"$ref":"#/components/schemas/Tool"},"description":"A list of tools the model may call. Currently, only functions are supported as a tool. Use this to provide a list of functions the model may generate JSON inputs for. A max of 128 functions are supported.","nullable":true},"top_logprobs":{"type":"integer","format":"int32","description":"An integer between 0 and 20 specifying the number of most likely tokens to return at each token position, each with an associated log probability. logprobs must be set to true if this parameter is used.","nullable":true},"top_p":{"type":"number","format":"float","description":"An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. It is generally recommended to alter this or `temperature` but not both.","nullable":true},"user":{"type":"string","description":"A unique identifier representing your end-user, which can help xAI to monitor and detect abuse.","nullable":true}}},"ChatResponse":{"type":"object","required":["id","object","created","model","choices"],"properties":{"choices":{"type":"array","items":{"$ref":"#/components/schemas/Choice"}},"created":{"type":"integer","format":"int64"},"id":{"type":"string"},"model":{"type":"string"},"object":{"type":"string"},"system_fingerprint":{"type":"string","nullable":true},"usage":{"allOf":[{"$ref":"#/components/schemas/Usage"}],"nullable":true}}},"ChatResponseChunk":{"type":"object","required":["id","object","created","model","choices"],"properties":{"choices":{"type":"array","items":{"$ref":"#/components/schemas/ChoiceChunk"}},"created":{"type":"integer","format":"int64"},"id":{"type":"string"},"model":{"type":"string"},"object":{"type":"string"},"system_fingerprint":{"type":"string","nullable":true},"usage":{"allOf":[{"$ref":"#/components/schemas/Usage"}],"nullable":true}}},"Choice":{"type":"object","required":["index","message"],"properties":{"finish_reason":{"type":"string","nullable":true},"index":{"type":"integer","format":"int32"},"logprobs":{"allOf":[{"$ref":"#/components/schemas/LogProbs"}],"nullable":true},"message":{"$ref":"#/components/schemas/ChoiceMessage"}}},"ChoiceChunk":{"type":"object","required":["index","delta"],"properties":{"delta":{"$ref":"#/components/schemas/Delta"},"finish_reason":{"type":"string","nullable":true},"index":{"type":"integer","format":"int32"},"logprobs":{"allOf":[{"$ref":"#/components/schemas/LogProbs"}],"nullable":true}}},"ChoiceMessage":{"type":"object","required":["role"],"properties":{"content":{"type":"string","nullable":true},"refusal":{"type":"string","nullable":true},"role":{"type":"string"},"tool_calls":{"type":"array","items":{"$ref":"#/components/schemas/ToolCall"},"nullable":true}}},"CompleteRequest":{"type":"object","required":["model","prompt","max_tokens_to_sample"],"properties":{"max_tokens_to_sample":{"type":"integer","format":"int32"},"metadata":{"allOf":[{"$ref":"#/components/schemas/MessageMetadata"}],"nullable":true},"model":{"type":"string"},"prompt":{"type":"string"},"stop_sequences":{"type":"array","items":{"type":"string"},"nullable":true},"stream":{"type":"boolean","nullable":true},"temperature":{"type":"number","format":"float","nullable":true},"top_k":{"type":"integer","format":"int32","nullable":true},"top_p":{"type":"number","format":"float","nullable":true}}},"CompleteResponse":{"type":"object","required":["type","id","completion","model"],"properties":{"completion":{"type":"string"},"id":{"type":"string"},"model":{"type":"string"},"stop_reason":{"type":"string","nullable":true},"type":{"type":"string"}}},"Content":{"oneOf":[{"type":"string"},{"type":"array","items":{"$ref":"#/components/schemas/ContentPart"}}]},"ContentPart":{"type":"object","required":["type"],"properties":{"detail":{"type":"string","nullable":true},"image_url":{"allOf":[{"$ref":"#/components/schemas/ImageUrl"}],"nullable":true},"text":{"type":"string","nullable":true},"text_file":{"type":"string","nullable":true},"type":{"type":"string"}}},"Delta":{"type":"object","required":["role"],"properties":{"content":{"type":"string","nullable":true},"role":{"type":"string"},"tool_calls":{"type":"array","items":{"$ref":"#/components/schemas/ToolCall"},"nullable":true}}},"EditImageRequest":{"type":"object","required":["prompt","image"],"properties":{"image":{"$ref":"#/components/schemas/ImageUrl"},"mask":{"allOf":[{"$ref":"#/components/schemas/ImageUrl"}],"nullable":true},"model":{"type":"string","nullable":true},"n":{"type":"integer","format":"int32","nullable":true},"prompt":{"type":"string"},"response_format":{"type":"string","nullable":true},"size":{"type":"string","nullable":true},"style":{"type":"string","nullable":true},"user":{"type":"string","nullable":true}}},"Embedding":{"type":"object","required":["index","embedding","object"],"properties":{"embedding":{"$ref":"#/components/schemas/EmbeddingContent"},"index":{"type":"integer","format":"int32"},"object":{"type":"string"}}},"EmbeddingContent":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"number","format":"float"}}]},"EmbeddingInput":{"oneOf":[{"type":"object","required":["String"],"properties":{"String":{"type":"string"}}},{"type":"object","required":["StringArray"],"properties":{"StringArray":{"type":"array","items":{"type":"string"}}}},{"type":"object","required":["Ints"],"properties":{"Ints":{"type":"array","items":{"type":"integer","format":"int32"}}}},{"type":"object","required":["IntsArray"],"properties":{"IntsArray":{"type":"array","items":{"type":"array","items":{"type":"integer","format":"int32"}}}}}]},"EmbeddingModel":{"type":"object","required":["id","fingerprint","created","object","owned_by","version","input_modalities","prompt_text_token_price","prompt_image_token_price"],"properties":{"created":{"type":"integer","format":"int64"},"fingerprint":{"type":"string"},"id":{"type":"string"},"input_modalities":{"type":"array","items":{"type":"string"}},"object":{"type":"string"},"owned_by":{"type":"string"},"prompt_image_token_price":{"type":"integer","format":"int64"},"prompt_text_token_price":{"type":"integer","format":"int64"},"version":{"type":"string"}}},"EmbeddingRequest":{"type":"object","required":["input","model"],"properties":{"dimensions":{"type":"integer","format":"int32","description":"The number of dimensions the resulting output embeddings should have.","nullable":true},"encoding_format":{"type":"string","description":"The format to return the embeddings in. Can be either `float` or `base64`.","nullable":true},"input":{"$ref":"#/components/schemas/EmbeddingInput"},"model":{"type":"string","description":"ID of the model to use."},"preview":{"type":"boolean","description":"Flag to use the new format of the API.","nullable":true},"user":{"type":"string","description":"A unique identifier representing your end-user, which can help xAI to monitor and detect abuse.","nullable":true}}},"EmbeddingResponse":{"type":"object","required":["object","model","data"],"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Embedding"}},"model":{"type":"string"},"object":{"type":"string"},"usage":{"allOf":[{"$ref":"#/components/schemas/EmbeddingUsage"}],"nullable":true}}},"EmbeddingUsage":{"type":"object","required":["prompt_tokens","total_tokens"],"properties":{"prompt_tokens":{"type":"integer","format":"int32"},"total_tokens":{"type":"integer","format":"int32"}}},"Function":{"type":"object","required":["name","arguments"],"properties":{"arguments":{"type":"string"},"name":{"type":"string"}}},"FunctionCall":{"type":"object","required":["name","arguments"],"properties":{"arguments":{"type":"string"},"name":{"type":"string"}}},"FunctionChoice":{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}},"FunctionDefinition":{"type":"object","required":["name","parameters"],"properties":{"description":{"type":"string","description":"A description of the function to indicate to the model when to call it.","nullable":true},"name":{"type":"string","description":"The name of the function. If the model calls the function, this name is used in the\nresponse."},"parameters":{"description":"A JSON schema describing the function parameters. The model _should_ follow the schema,\nhowever, this is not enforced at the moment."},"strict":{"type":"boolean","description":"Not supported. Only maintained for compatibility reasons.","nullable":true}}},"GenerateImageRequest":{"type":"object","required":["prompt"],"properties":{"model":{"type":"string","nullable":true},"n":{"type":"integer","format":"int32","nullable":true},"prompt":{"type":"string"},"quality":{"type":"string","nullable":true},"response_format":{"type":"string","nullable":true},"size":{"type":"string","nullable":true},"style":{"type":"string","nullable":true},"user":{"type":"string","nullable":true}}},"GeneratedImage":{"type":"object","properties":{"base64":{"type":"string","nullable":true},"revised_prompt":{"type":"string","nullable":true},"url":{"type":"string","nullable":true}}},"GeneratedImageResponse":{"type":"object","required":["data"],"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/GeneratedImage"}}}},"ImageUrl":{"type":"object","required":["url"],"properties":{"detail":{"type":"string","nullable":true},"url":{"type":"string"}}},"LanguageModel":{"type":"object","required":["id","fingerprint","created","object","owned_by","version","input_modalities","output_modalities","prompt_text_token_price","prompt_image_token_price","completion_text_token_price"],"properties":{"completion_text_token_price":{"type":"integer","format":"int64"},"created":{"type":"integer","format":"int64"},"fingerprint":{"type":"string"},"id":{"type":"string"},"input_modalities":{"type":"array","items":{"type":"string"}},"object":{"type":"string"},"output_modalities":{"type":"array","items":{"type":"string"}},"owned_by":{"type":"string"},"prompt_image_token_price":{"type":"integer","format":"int64"},"prompt_text_token_price":{"type":"integer","format":"int64"},"version":{"type":"string"}}},"ListEmbeddingModelsResponse":{"type":"object","required":["models"],"properties":{"models":{"type":"array","items":{"$ref":"#/components/schemas/EmbeddingModel"}}}},"ListLanguageModelsResponse":{"type":"object","required":["models"],"properties":{"models":{"type":"array","items":{"$ref":"#/components/schemas/LanguageModel"}}}},"ListModelsResponse":{"type":"object","required":["data","object"],"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Model"}},"object":{"type":"string"}}},"LogProbs":{"type":"object","properties":{"content":{"type":"array","items":{"$ref":"#/components/schemas/TokenLogProb"},"nullable":true}}},"Message":{"oneOf":[{"type":"object","required":["content","role"],"properties":{"content":{"$ref":"#/components/schemas/Content"},"name":{"type":"string","nullable":true},"role":{"type":"string","enum":["system"]}}},{"type":"object","required":["content","role"],"properties":{"content":{"$ref":"#/components/schemas/Content"},"name":{"type":"string","nullable":true},"role":{"type":"string","enum":["user"]}}},{"type":"object","required":["content","role"],"properties":{"content":{"$ref":"#/components/schemas/Content"},"name":{"type":"string","nullable":true},"role":{"type":"string","enum":["assistant"]},"toolCalls":{"type":"array","items":{"$ref":"#/components/schemas/ToolCall"},"nullable":true}}},{"type":"object","required":["content","role"],"properties":{"content":{"$ref":"#/components/schemas/Content"},"role":{"type":"string","enum":["tool"]},"toolCallId":{"type":"string","nullable":true}}},{"type":"object","required":["content","role"],"properties":{"content":{"$ref":"#/components/schemas/Content"},"name":{"type":"string","nullable":true},"role":{"type":"string","enum":["function"]}}}],"discriminator":{"propertyName":"role"}},"MessageBody":{"type":"object","required":["role","content"],"properties":{"content":{"$ref":"#/components/schemas/MessageContent"},"role":{"type":"string"}}},"MessageContent":{"oneOf":[{"type":"string"},{"type":"array","items":{"$ref":"#/components/schemas/MessageContentPart"}}]},"MessageContentPart":{"oneOf":[{"type":"object","required":["text","type"],"properties":{"cacheControl":{"type":"string","nullable":true},"text":{"type":"string"},"type":{"type":"string","enum":["text"]}}},{"type":"object","required":["source","type"],"properties":{"cacheControl":{"type":"string","nullable":true},"source":{"$ref":"#/components/schemas/MessageImageContent"},"type":{"type":"string","enum":["image"]}}},{"type":"object","required":["id","name","input","type"],"properties":{"cacheControl":{"type":"string","nullable":true},"id":{"type":"string"},"input":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["tool_use"]}}},{"type":"object","required":["toolUseId","content","type"],"properties":{"cacheControl":{"type":"string","nullable":true},"content":{"type":"string"},"isError":{"type":"boolean","nullable":true},"toolUseId":{"type":"string"},"type":{"type":"string","enum":["tool_result"]}}}],"discriminator":{"propertyName":"type"}},"MessageImageContent":{"type":"object","required":["type","media_type","data"],"properties":{"data":{"type":"string"},"media_type":{"type":"string"},"type":{"type":"string"}}},"MessageMetadata":{"type":"object","properties":{"user_id":{"type":"string","nullable":true}}},"MessageRequest":{"type":"object","required":["model","messages","max_tokens"],"properties":{"max_tokens":{"type":"integer","format":"int32"},"messages":{"type":"array","items":{"$ref":"#/components/schemas/MessageBody"}},"metadata":{"allOf":[{"$ref":"#/components/schemas/MessageMetadata"}],"nullable":true},"model":{"type":"string"},"stop_sequences":{"type":"array","items":{"type":"string"},"nullable":true},"stream":{"type":"boolean","nullable":true},"system":{"allOf":[{"$ref":"#/components/schemas/SystemMessageContent"}],"nullable":true},"temperature":{"type":"number","format":"float","nullable":true},"tool_choice":{"allOf":[{"$ref":"#/components/schemas/MessageToolChoice"}],"nullable":true},"tools":{"type":"array","items":{"$ref":"#/components/schemas/MessageTools"},"nullable":true},"top_k":{"type":"integer","format":"int32","nullable":true},"top_p":{"type":"number","format":"float","nullable":true}}},"MessageResponse":{"type":"object","required":["id","type","role","content","model","usage"],"properties":{"content":{"type":"array","items":{"$ref":"#/components/schemas/MessageResponseContent"}},"id":{"type":"string"},"model":{"type":"string"},"role":{"type":"string"},"stop_reason":{"type":"string","nullable":true},"stop_sequence":{"type":"string","nullable":true},"type":{"type":"string"},"usage":{"$ref":"#/components/schemas/MessageUsage"}}},"MessageResponseContent":{"oneOf":[{"type":"object","required":["text","type"],"properties":{"text":{"type":"string"},"type":{"type":"string","enum":["text"]}}},{"type":"object","required":["id","name","input","type"],"properties":{"id":{"type":"string"},"input":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["tool_use"]}}}],"discriminator":{"propertyName":"type"}},"MessageToolChoice":{"type":"object","required":["type"],"properties":{"name":{"type":"string","nullable":true},"type":{"type":"string"}}},"MessageToolInputSchema":{"type":"object","required":["type"],"properties":{"properties":{"type":"string","nullable":true},"type":{"type":"string"}}},"MessageTools":{"type":"object","required":["name","input_schema"],"properties":{"cache_control":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"input_schema":{"$ref":"#/components/schemas/MessageToolInputSchema"},"name":{"type":"string"}}},"MessageUsage":{"type":"object","required":["input_tokens","cache_creation_input_tokens","cache_read_input_tokens","output_tokens"],"properties":{"cache_creation_input_tokens":{"type":"integer","format":"int32"},"cache_read_input_tokens":{"type":"integer","format":"int32"},"input_tokens":{"type":"integer","format":"int32"},"output_tokens":{"type":"integer","format":"int32"}}},"Model":{"type":"object","description":"Same as `LanguageModel` but fully compliant with the OpenAI API.","required":["id","created","object","owned_by"],"properties":{"created":{"type":"integer","format":"int64"},"id":{"type":"string"},"object":{"type":"string"},"owned_by":{"type":"string"}}},"PromptUsageDetail":{"type":"object","required":["text_tokens","audio_tokens","image_tokens","cached_tokens"],"properties":{"audio_tokens":{"type":"integer","format":"int32"},"cached_tokens":{"type":"integer","format":"int32"},"image_tokens":{"type":"integer","format":"int32"},"text_tokens":{"type":"integer","format":"int32"}}},"ResponseFormat":{"oneOf":[{"type":"object","required":["type"],"properties":{"type":{"type":"string","enum":["text"]}}},{"type":"object","required":["type"],"properties":{"type":{"type":"string","enum":["json_object"]}}},{"type":"object","required":["json_schema","type"],"properties":{"json_schema":{},"type":{"type":"string","enum":["json_schema"]}}}],"discriminator":{"propertyName":"type"}},"SampleChoice":{"type":"object","required":["index","text","finish_reason"],"properties":{"finish_reason":{"type":"string"},"index":{"type":"integer","format":"int32"},"text":{"type":"string"}}},"SampleContent":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}]},"SampleRequest":{"type":"object","required":["prompt","model"],"properties":{"best_of":{"type":"integer","format":"int32","description":"Generates multiple completions internally and returns the top-scoring one. Not functional yet.","nullable":true},"echo":{"type":"boolean","description":"Option to include the original prompt in the response along with the generated completion.","nullable":true},"frequency_penalty":{"type":"number","format":"float","description":"Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.","nullable":true},"logit_bias":{"type":"object","description":"Accepts a JSON object that maps tokens to an associated bias value from -100 to 100. You can use this tokenizer tool to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.","additionalProperties":{"type":"number","format":"float"},"nullable":true},"logprobs":{"type":"boolean","description":"Include the log probabilities on the `logprobs` most likely output tokens, as well the chosen tokens. For example, if `logprobs` is 5, the API will return a list of the 5 most likely tokens. The API will always return the logprob of the sampled token, so there may be up to `logprobs+1` elements in the response.","nullable":true},"max_tokens":{"type":"integer","format":"int32","description":"Limits the number of tokens that can be produced in the output. Ensure the sum of prompt tokens and `max_tokens` does not exceed the model's context limit.","nullable":true},"model":{"type":"string","description":"Specifies the model to be used for the request."},"n":{"type":"integer","format":"int32","description":"Determines how many completion sequences to produce for each prompt. Be cautious with its use due to high token consumption; adjust `max_tokens` and stop sequences accordingly.","nullable":true},"presence_penalty":{"type":"number","format":"float","description":"Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.","nullable":true},"prompt":{"$ref":"#/components/schemas/SampleContent"},"seed":{"type":"integer","format":"int32","description":"If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed, and you should refer to the system_fingerprint response parameter to monitor changes in the backend.","nullable":true},"stop":{"type":"array","items":{"type":"string"},"description":"Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence.","nullable":true},"stream":{"type":"boolean","description":"Whether to stream back partial progress. If set, tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a `data: [DONE]` message.","nullable":true},"stream_options":{"allOf":[{"$ref":"#/components/schemas/StreamOptions"}],"nullable":true},"suffix":{"type":"string","description":"Optional string to append after the generated text.","nullable":true},"temperature":{"type":"number","format":"float","description":"What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or `top_p` but not both.","nullable":true},"top_p":{"type":"number","format":"float","description":"An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with `top_p` probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We generally recommend altering this or temperature but not both.","nullable":true},"user":{"type":"string","description":"A unique identifier representing your end-user, which can help xAI to monitor and detect abuse.","nullable":true}}},"SampleResponse":{"type":"object","required":["id","object","created","model","choices"],"properties":{"choices":{"type":"array","items":{"$ref":"#/components/schemas/SampleChoice"}},"created":{"type":"integer","format":"int64"},"id":{"type":"string"},"model":{"type":"string"},"object":{"type":"string"},"system_fingerprint":{"type":"string","nullable":true},"usage":{"allOf":[{"$ref":"#/components/schemas/Usage"}],"nullable":true}}},"StreamOptions":{"type":"object","required":["include_usage"],"properties":{"include_usage":{"type":"boolean"}}},"SystemMessageContent":{"oneOf":[{"type":"string"},{"type":"array","items":{"$ref":"#/components/schemas/SystemMessagePart"}}]},"SystemMessagePart":{"type":"object","required":["type","text"],"properties":{"cache_control":{"type":"string","nullable":true},"text":{"type":"string"},"type":{"type":"string"}}},"TokenLogProb":{"type":"object","required":["token","logprob","top_logprobs"],"properties":{"bytes":{"type":"string","format":"binary","nullable":true},"logprob":{"type":"number","format":"float"},"token":{"type":"string"},"top_logprobs":{"type":"array","items":{"$ref":"#/components/schemas/TopLogProb"}}}},"Tool":{"type":"object","required":["type","function"],"properties":{"function":{"$ref":"#/components/schemas/FunctionDefinition"},"type":{"type":"string","description":"The type of tool the model can use. For now, the only supported type is \"function\"."}}},"ToolCall":{"type":"object","required":["id","function"],"properties":{"function":{"$ref":"#/components/schemas/Function"},"id":{"type":"string"},"index":{"type":"integer","format":"int32","nullable":true},"type":{"type":"string","nullable":true}}},"ToolChoice":{"oneOf":[{"type":"string"},{"type":"object","required":["type"],"properties":{"function":{"allOf":[{"$ref":"#/components/schemas/FunctionChoice"}],"nullable":true},"type":{"type":"string"}}}]},"TopLogProb":{"type":"object","required":["token","logprob"],"properties":{"bytes":{"type":"string","format":"binary","nullable":true},"logprob":{"type":"number","format":"float"},"token":{"type":"string"}}},"Usage":{"type":"object","required":["prompt_tokens","completion_tokens","total_tokens"],"properties":{"completion_tokens":{"type":"integer","format":"int32"},"prompt_tokens":{"type":"integer","format":"int32"},"prompt_tokens_details":{"allOf":[{"$ref":"#/components/schemas/PromptUsageDetail"}],"nullable":true},"total_tokens":{"type":"integer","format":"int32"}}}},"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer"}}}}
